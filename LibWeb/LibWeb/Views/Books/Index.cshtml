@using LibWeb.Models
@model IEnumerable<LibWeb.Models.Book>

@{
    ViewData["Title"] = "Book List";
}
<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" class="form-control" name="Title" placeholder="Search by Title or Author" value="@ViewBag.CurrentTitle">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="submit">Search</button>
        </div>
    </div>

    <div class="mt-2">
        <strong>Filter by Genre:</strong><br />
        @foreach (var genre in ViewBag.Genres)
        {
            <input type="checkbox" name="genre" value="@genre.Name" @(ViewBag.SelectedGenres != null && ViewBag.SelectedGenres.Contains(genre.Name) ? "checked" : "")> @genre.Name
        }
        <button type="submit" class="btn btn-sm btn-primary ml-2">Filter</button>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Author</th>
            <th>Genres</th>
            <th>Available Quantity</th>
            <th>Rating</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in Model)
        {
            <tr onclick="window.location.href='@Url.Action("Details", "Books", new { id = book.BookID })'" style="cursor: pointer;">
                <td>@book.Title</td>
                <td>@book.Author</td>
                <td>@string.Join(", ", book.BookGenres.Select(bg => bg.Genre.Name))</td>
                <td>@book.AvailableQuantity</td>
                <td>@book.AverageRating</td>
                <td>
                    @if (User.IsInRole("Admin") || User.IsInRole("Thuthu")) 
                    {
                        <a href="@Url.Action("Edit", "Books", new { id = book.BookID })" class="btn btn-warning btn-sm">Edit</a>
                        <a href="@Url.Action("Delete", "Books", new { id = book.BookID })" class="btn btn-danger btn-sm">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@if (User.IsInRole("Admin") || User.IsInRole("Thuthu")) 
{     
    <a href="@Url.Action("Create", "Books")" class="btn btn-primary">Add New Book</a>
}

<div id="chatbot-window" class="chatbot-window">
    <div class="chatbot-header">
        Book Database Chatbot
        <button id="close-chatbot" class="btn btn-sm btn-secondary float-right">Close</button>
    </div>
    <div id="chat-container-inline" class="chat-container">
    </div>
    <div class="input-group mt-2">
        <input type="text" id="user-message-inline" class="form-control" placeholder="Ask me about books...">
        <div class="input-group-append">
            <button id="send-button-inline" class="btn btn-primary">Send</button>
        </div>
    </div>
</div>

<div id="open-chatbot-icon" class="open-chatbot-icon">
    <i class="bi bi-chat-dots-fill"></i>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.min.css">
    <style>
        .open-chatbot-icon {
            position: fixed;
            bottom: 20px;
            right: 20px;
            cursor: pointer;
            z-index: 1000;
            background-color: white;
            border-radius: 50%;
            padding: 15px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            font-size: 2em;
            color: #007bff;
        }

        .chatbot-window {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1001;
            width: 300px;
            height: 400px;
            background-color: white;
            border: 1px solid #ccc;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
            display: none; 
            display: flex; 
            flex-direction: column; 
        }

        .chatbot-header {
            background-color: #f8f9fa;
            padding: 10px;
            border-bottom: 1px solid #eee;
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
            font-weight: bold;
        }

        .chat-container {
            flex-grow: 1; 
            padding: 10px;
            overflow-y: auto; 
        }

        .input-group {
            padding: 10px;
            border-top: 1px solid #eee;
            margin-top: auto; 
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#open-chatbot-icon").click(function () {
                $("#chatbot-window").show();
                $("#open-chatbot-icon").hide();
            });

            $("#close-chatbot").click(function () {
                $("#chatbot-window").hide();
                $("#open-chatbot-icon").show();
            });

            $("#send-button-inline").click(function () {
                var userMessage = $("#user-message-inline").val();
                if (userMessage.trim() !== "") {
                    $("#chat-container-inline").append(`<p><strong>You:</strong> ${userMessage}</p>`);
                    $("#user-message-inline").val("");

                    $.post("/Chatbot/SendMessage", { userMessage: userMessage })
                        .done(function (data) {
                            $("#chat-container-inline").append(`<p><strong>Chatbot:</strong> ${data.chatbotResponse}</p>`);
                            if (data.chatbotResponse.startsWith("Error")) {
                                console.error("Chatbot Error:", data.chatbotResponse);
                            }
                        })
                        .fail(function (error) {
                            $("#chat-container-inline").append(`<p class="text-danger"><strong>Error:</strong> ${error.responseText || "Failed to send message."}</p>`);
                            console.error("AJAX Error:", error);
                        });
                }
            });

            $("#user-message-inline").keypress(function (e) {
                if (e.which == 13) {
                    $("#send-button-inline").click();
                    return false;
                }
            });
        });
    </script>
}
<nav>
    <ul class="pagination">
        @if (ViewBag.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = 1 })">First</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1 })">Previous</a>
            </li>
        }

        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
            </li>
        }

        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1 })">Next</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.TotalPages })">Last</a>
            </li>
        }
    </ul>
</nav>