@model LibWeb.Models.Book

<h2>@Model.Title</h2>

<div>
    <img src="~/Img/@Model.ImgFile" alt="Book Cover" style="width: 200px; height: auto;" />
</div>

<ul>
    <li><strong>Author:</strong> @Model.Author</li>
    <li><strong>Genres:</strong> @string.Join(", ", Model.BookGenres.Select(bg => bg.Genre.Name))</li>
    <li><strong>Available Quantity:</strong> @Model.AvailableQuantity</li>
    <li><strong>Average Rating:</strong> @Model.AverageRating</li>
</ul>

<h4>Rate this book</h4>
    <form method="post" asp-controller="Rating" asp-action="Rate" id="ratingForm">
        <input type="hidden" name="bookID" value="@Model.BookID" />
        <input type="hidden" name="ratingValue" id="ratingValue" />

        <div id="starRating" class="mb-2">
            @for (int i = 1; i <= 10; i++)
            {
                <span class="star" data-value="@i">&#9733;</span> <!-- ★ -->
            }
        </div>

        <button type="submit" class="btn btn-success">Submit Rating</button>
    </form>

@if (Model.AvailableQuantity > 0)
{
    <td>
        <form method="post" action="@Url.Action("AddToCart", "Cart")">
            <input type="hidden" name="bookID" value="@Model.BookID" />
            <button type="submit" class="btn btn-primary">Add to Cart</button>
        </form>
    </td>
}
else
{
    <p style="color: red;">This book is out of stock!</p>
}

<a href="@Url.Action("Index", "Books")">Back to List</a>



@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@section Styles {
    <style>
        .star {
            font-size: 30px;
            color: gray;
            cursor: pointer;
            user-select: none;
        }

            .star.selected {
                color: gold;
            }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const stars = document.querySelectorAll('.star');
            const ratingInput = document.getElementById('ratingValue');

            stars.forEach(star => {
                star.addEventListener('click', function () {
                    const rating = parseInt(this.getAttribute('data-value'));
                    ratingInput.value = rating;

                    stars.forEach(s => {
                        const val = parseInt(s.getAttribute('data-value'));
                        if (val <= rating) {
                            s.classList.add('selected');
                        } else {
                            s.classList.remove('selected');
                        }
                    });
                });
            });
        });
    </script>
}

